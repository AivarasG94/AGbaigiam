{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Stalinis kompiuteris\\\\Baigiamasis_CodeAcademy-main\\\\frontend\\\\src\\\\pages\\\\Event.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport './Event.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EventPage extends Component {\n  constructor(props) {\n    super(props);\n    this.submitHandler = event => {\n      event.preventDefault();\n      const name = this.name.current.value;\n      if (name.trim().length === 0) {\n        return;\n      }\n      const request = {\n        query: `\n                mutation {\n                    createEvent(name: \"${name}\") {\n                        _id\n                        name\n                    }\n                }\n            `\n      };\n      fetch('http://localhost:8001/graphql', {\n        method: 'POST',\n        body: JSON.stringify(request),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.errors && data.errors.length) {\n          console.log(data.errors);\n          return;\n        }\n        this.setState({\n          events: [...this.state.events, data.data.createEvent]\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.fetchEvents = () => {\n      const request = {\n        query: `\n                query {\n                    events {\n                        _id\n                        name\n                    }\n                }\n            `\n      };\n      fetch('http://localhost:8001/graphql', {\n        method: 'POST',\n        body: JSON.stringify(request),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.errors && data.errors.length) {\n          console.log(data.errors);\n          return;\n        }\n        this.setState({\n          isLoading: false,\n          events: data.data.events\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.deleteEvent = eventId => {\n      const request = {\n        query: `\n                mutation {\n                    deleteEvent(eventId:\"${eventId}\")\n                }\n            `\n      };\n      fetch('http://localhost:8001/graphql', {\n        method: 'POST',\n        body: JSON.stringify(request),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        if (data.errors && data.errors.length) {\n          console.log(data.errors);\n          return;\n        }\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events].filter(e => e._id !== eventId);\n          return {\n            events: updatedEvents\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.state = {\n      isLoading: true,\n      events: []\n    };\n    this.name = /*#__PURE__*/React.createRef();\n  }\n  componentDidMount() {\n    this.fetchEvents();\n  }\n  render() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            ref: this.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"event-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-list-item\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), this.state.events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", event.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.deleteEvent(event._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, event._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n}\nEventPage.contextType = AuthContext;\nexport default EventPage;","map":{"version":3,"names":["React","Component","AuthContext","jsxDEV","_jsxDEV","EventPage","constructor","props","submitHandler","event","preventDefault","name","current","value","trim","length","request","query","fetch","method","body","JSON","stringify","headers","Authorization","context","token","then","res","json","data","errors","console","log","setState","events","state","createEvent","catch","err","fetchEvents","isLoading","deleteEvent","eventId","prevState","updatedEvents","filter","e","_id","createRef","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","id","required","ref","map","onClick","contextType"],"sources":["C:/Users/Lenovo/OneDrive/Stalinis kompiuteris/Baigiamasis_CodeAcademy-main/frontend/src/pages/Event.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport './Event.css';\n\nclass EventPage extends Component {\n\n    static contextType = AuthContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            events: []\n        };\n\n        this.name = React.createRef();\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        const name = this.name.current.value;\n\n        if (name.trim().length === 0) {\n            return;\n        }\n\n        const request = {\n            query: `\n                mutation {\n                    createEvent(name: \"${name}\") {\n                        _id\n                        name\n                    }\n                }\n            `\n        }\n\n        fetch('http://localhost:8001/graphql', {\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + this.context.token\n            }\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.errors && data.errors.length) {\n                console.log(data.errors)\n                return;\n            }\n\n            this.setState({events: [...this.state.events, data.data.createEvent]})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    fetchEvents = () => {\n        const request = {\n            query: `\n                query {\n                    events {\n                        _id\n                        name\n                    }\n                }\n            `\n        }\n\n        fetch('http://localhost:8001/graphql', {\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + this.context.token\n            }\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.errors && data.errors.length) {\n                console.log(data.errors)\n                return;\n            }\n\n            this.setState({isLoading: false, events: data.data.events})\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    deleteEvent = (eventId) => {\n        const request = {\n            query: `\n                mutation {\n                    deleteEvent(eventId:\"${eventId}\")\n                }\n            `\n        }\n\n        fetch('http://localhost:8001/graphql', {\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + this.context.token\n            }\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.errors && data.errors.length) {\n                console.log(data.errors)\n                return;\n            }\n\n            this.setState(prevState => {\n                const updatedEvents = [...prevState.events].filter(e => e._id !== eventId);\n\n                return { events: updatedEvents };\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    componentDidMount() {\n        this.fetchEvents();\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <h1>Loading...</h1>\n        }\n\n        return (\n            <div>\n                <form onSubmit={this.submitHandler}>\n                    <div className=\"event-row\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" id=\"name\" required ref={this.name}/>\n                    </div>\n\n                    <div className=\"event-row\">\n                        <button type=\"submit\">Submit</button>\n                    </div>\n                </form>\n                <ul className='event-table'>\n                    <li className=\"event-list-item\">\n                        Name\n                    </li>\n                    {\n                        this.state.events.map(event => (\n                            <li className='event-list-item' key={event._id}>\n                                <span> {event.name} </span>\n                                <button onClick={() => this.deleteEvent(event._id)}>Delete</button>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n            \n        )\n    }\n}\n\nexport default EventPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}